{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar user = {\n  id: \"u1\",\n  image: \"https://notjustdev-dummy.s3.us-east-2.amazonaws.com/avatars/vadim.jpg\",\n  name: \"Vadim Savin\"\n};\nvar CreatPostScreen = function CreatPostScreen() {\n  var _useState = useState(\"hello world\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    description = _useState2[0],\n    setDescription = _useState2[1];\n  var onSubmit = function onSubmit() {\n    console.warn('submitted');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Image, {\n        source: {\n          uri: user.image\n        },\n        style: styles.image\n      }), _jsx(Text, {\n        style: styles.name,\n        children: user.name\n      })]\n    }), _jsx(TextInput, {\n      value: description,\n      onChangeText: setDescription,\n      placeholder: \"What's happening?\",\n      multiline: true\n    }), _jsx(View, {}), \">\"]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: \"100%\",\n    padding: 20,\n    paddingTop: 50,\n    backgroundColor: \"white\"\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: \"100%\",\n    marginBottom: 15\n  },\n  image: {\n    width: 40,\n    height: 40,\n    borderRadius: 30,\n    marginRight: 10\n  },\n  name: {\n    fontWeight: \"bold\"\n  }\n});\nexport default CreatPostScreen;","map":{"version":3,"names":["useState","jsx","_jsx","jsxs","_jsxs","user","id","image","name","CreatPostScreen","_useState","_useState2","_slicedToArray","description","setDescription","onSubmit","console","warn","View","style","styles","container","children","header","Image","source","uri","Text","TextInput","value","onChangeText","placeholder","multiline","StyleSheet","create","flex","width","padding","paddingTop","backgroundColor","flexDirection","alignItems","marginBottom","height","borderRadius","marginRight","fontWeight"],"sources":["/Users/anymacstore/Documents/React-Native/notJustFriends/notJustFriends/src/screens/CreatPostScreen.js"],"sourcesContent":["import { Text, StyleSheet, View, Image, TextInput, Button } from \"react-native\";\nimport { useState } from \"react\";\n\nconst user = {\n  id: \"u1\",\n  image:\n    \"https://notjustdev-dummy.s3.us-east-2.amazonaws.com/avatars/vadim.jpg\",\n  name: \"Vadim Savin\",\n};\n\nconst CreatPostScreen = () => {\n    const [description, setDescription] = useState(\"hello world\");\n    \n   \n    const onSubmit = () => {\n        console.warn('submitted');\n    }\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Image source={{ uri: user.image }} style={styles.image} />\n        <Text style={styles.name}>{user.name}</Text>\n      </View>\n          <TextInput\n              value={description}\n              onChangeText={setDescription}\n              placeholder=\"What's happening?\" multiline />\n          \n          <View>\n          </View>>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: \"100%\",\n    padding: 20,\n    paddingTop: 50,\n    backgroundColor: \"white\",\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: \"100%\",\n    marginBottom: 15,\n  },\n  image: {\n    width: 40,\n    height: 40,\n    borderRadius: 30,\n    marginRight: 10,\n  },\n  name: {\n    fontWeight: \"bold\",\n  },\n});\n\nexport default CreatPostScreen;\n"],"mappings":";;;;;;;AACA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjC,IAAMC,IAAI,GAAG;EACXC,EAAE,EAAE,IAAI;EACRC,KAAK,EACH,uEAAuE;EACzEC,IAAI,EAAE;AACR,CAAC;AAED,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;EAC1B,IAAAC,SAAA,GAAsCV,QAAQ,CAAC,aAAa,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtDG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAGlC,IAAMI,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;IACnBC,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;EAC7B,CAAC;EACH,OACEb,KAAA,CAACc,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BlB,KAAA,CAACc,IAAI;MAACC,KAAK,EAAEC,MAAM,CAACG,MAAO;MAAAD,QAAA,GACzBpB,IAAA,CAACsB,KAAK;QAACC,MAAM,EAAE;UAAEC,GAAG,EAAErB,IAAI,CAACE;QAAM,CAAE;QAACY,KAAK,EAAEC,MAAM,CAACb;MAAM,EAAG,EAC3DL,IAAA,CAACyB,IAAI;QAACR,KAAK,EAAEC,MAAM,CAACZ,IAAK;QAAAc,QAAA,EAAEjB,IAAI,CAACG;MAAI,EAAQ;IAAA,EACvC,EACHN,IAAA,CAAC0B,SAAS;MACNC,KAAK,EAAEhB,WAAY;MACnBiB,YAAY,EAAEhB,cAAe;MAC7BiB,WAAW,EAAC,mBAAmB;MAACC,SAAS;IAAA,EAAG,EAEhD9B,IAAA,CAACgB,IAAI,KACE,KACb;EAAA,EAAO;AAEX,CAAC;AAED,IAAME,MAAM,GAAGa,UAAU,CAACC,MAAM,CAAC;EAC/Bb,SAAS,EAAE;IACTc,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,MAAM;IACbC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IACdC,eAAe,EAAE;EACnB,CAAC;EACDhB,MAAM,EAAE;IACNiB,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBL,KAAK,EAAE,MAAM;IACbM,YAAY,EAAE;EAChB,CAAC;EACDnC,KAAK,EAAE;IACL6B,KAAK,EAAE,EAAE;IACTO,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE;EACf,CAAC;EACDrC,IAAI,EAAE;IACJsC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAerC,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}